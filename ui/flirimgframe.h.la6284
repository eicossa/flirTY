#ifndef FLIRIMGFRAME_H
#define FLIRIMGFRAME_H

#include <QFrame>
#include <QGraphicsView>
#include "flirimg.h"

class QLabel;
class QSlider;
class QToolButton;
class flirImgFrame;
class QHBoxLayout;
class QVBoxLayout;
class QStatusBar;
class flirImg;
class QRubberBand;

class flirImgDisplayerGraphicsView : public QGraphicsView
{
    Q_OBJECT
public:
    flirImgDisplayerGraphicsView(flirImgFrame *v) : QGraphicsView(), view(v) { }
signals:
    void statusBarSignal(QPointF imgPos);
protected:
    void wheelEvent(QWheelEvent *) override;
    void mouseMoveEvent(QMouseEvent *) override;
    void mousePressEvent(QMouseEvent *) override;
    void mouseReleaseEvent(QMouseEvent *) override;

private:
    flirImgFrame *view;
    QPointF      sceneMousePos;
    QRubberBand *rubberBand;
};


class flirImgFrame : public QFrame
{
    Q_OBJECT
signals:
    void leafButtonStatus(bool status);
public:
    explicit flirImgFrame(const QString &name, flirImg *fimg, QWidget *parent = 0);
    void setFlirImg(flirImg *fimg);
    void setImg(QImage *img);
    QGraphicsView *view() const;
    QToolButton* getLeafDetectButton() { return leafDetectButton; }
public slots:
    void zoomIn(int level = 1);
    void zoomOut(int level = 1);
    void receiveStatusBarInfo(QPointF imgPos);

private slots:
    void resetView();
    void setResetButtonEnabled();
    void setupMatrix();
    void togglePointerMode();
    void toggleOpenGL();
    void toggleLeafButtonStatus();
    void print();
    void rotateLeft();
    void rotateRight();
    void updateStatusBar();

private:
    void setupImgDisplayer();
    flirImgDisplayerGraphicsView *flirImgDisplayer;
    flirImg      *fimg;
    QImage       *img;
    int                 imgWidth, imgHeight;

    QLabel *label;
    QLabel *label2;

    void         setupViewingModes();
    QToolButton *selectModeButton;
    QToolButton *dragModeButton;

    void         setupProcessingModes();
    QToolButton *rectSelectButton;
    QToolButton *leafDetectButton;
    QToolButton *printButton;
    QToolButton *pointSelectButton;
    QToolButton *resetButton;

    void        setupSlots();

    QSize       *iconSize;

    void         setupZoomStuff();
    QToolButton *zoomInIcon;
    QToolButton *zoomOutIcon;
    QSlider     *zoomSlider;
    QVBoxLayout *zoomSliderLayout;

    void         setupRotateStuff();
    QToolButton *rotateLeftIcon;
    QToolButton *rotateRightIcon;
    QSlider     *rotateSlider;
    QHBoxLayout *rotateSliderLayout;

    void         setupTopButtonsLayout();
    QHBoxLayout *topButtonsLayout;


    QSlider *leafParam1Slider;
    QSlider *leafParam2Slider;
    QSlider *leafParam3Slider;


    QStatusBar *statusBar;

};


#endif // FLIRIMGFRAME_H
